openapi: 3.0.2
info:
  title: Order API
  version: 1.0.0
  description: 'Order API for https://github.com/redhat-france-sa/microservices-saga-blueprint'
paths:
  '/order/{id}/cancel':
    put:
      parameters:
        -
          name: id
          description: Identifier of Order
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: Order with CANCELED status
      operationId: MarkCanceledOrder
      summary: Mark order as canceled
    parameters:
      -
        name: id
        description: Identifier of Order
        schema:
          type: string
        in: path
        required: true
  '/order/{id}':
    get:
      parameters:
        -
          name: id
          description: Order identifier
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: Get requested order
      operationId: GetOrderById
      summary: Get Order
    parameters:
      -
        name: id
        description: Order identifier
        schema:
          type: string
        in: path
        required: true
  '/order/{id}/fail':
    put:
      parameters:
        -
          name: id
          description: Identifier of Order
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: Order with FAILED status
      operationId: MarkFailedOrder
      summary: Mark order as failed
    parameters:
      -
        name: id
        description: Identifier of Order
        schema:
          type: string
        in: path
        required: true
  /order:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderInfo'
            examples:
              apple-watch:
                value:
                  customerId: mourad-00
                  productItems:
                    -
                      productId: apple-watch-06
                      quantity: 1
                      price: 399.9
                  totalPrice: 399.9
                  currency: EUR
                  paymentCardId: payment-mourad-00
                  shippingAddressId: address-mourad-00
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
              examples:
                apple-watch:
                  value:
                    id: '{{guid()}}'
                    customerId: '{{request.body/customerId}}'
                    productItems:
                      -
                        productId: '{{request.body/productItems[O].producId}}'
                        quantity: 1
                        price: 399.9
                    totalPrice: 399.9
                    currency: EUR
                    paymentCardId: '{{request.body/paymentCardId}}'
                    shippingAddressId: '{{request.body/shippingAddressId}}'
          description: The newly created order
      operationId: CreateOrder
      summary: Create Order
components:
  schemas:
    Order:
      description: ''
      type: object
      allOf:
        -
          required:
            - id
            - status
          type: object
          properties:
            id:
              description: Unique identifier of order
              type: string
            status:
              description: Status of Order
              enum:
                - CREATED
                - VALIDATED
                - CANCELED
                - FAILED
              type: string
        -
          $ref: '#/components/schemas/OrderInfo'
    ProductItem:
      title: Root Type for ProductItem
      description: ''
      type: object
      properties:
        productId:
          description: Identifier of product
          type: string
        quantity:
          format: int32
          description: Quantity of this product
          type: integer
        price:
          format: double
          description: Price for the quantity of product
          type: number
    OrderInfo:
      description: ''
      required:
        - customerId
        - productItems
        - currency
        - paymentCardId
        - shippingAddressId
      type: object
      properties:
        customerId:
          description: ''
          type: string
        productItems:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/ProductItem'
        totalPrice:
          format: double
          description: ''
          type: number
        currency:
          description: ''
          enum:
            - EUR
            - USD
          type: string
        paymentCardId:
          description: ''
          type: string
        shippingAddressId:
          description: ''
          type: string
