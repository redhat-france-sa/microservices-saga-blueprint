/*
 * Order API
 * Order API for https://github.com/redhat-france-sa/microservices-saga-blueprint
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.redhat.microsaga.model.order;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.redhat.microsaga.model.order.ProductItem;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * OrderInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-09-06T17:56:06.202405+02:00[Europe/Paris]")
public class OrderInfo {
  public static final String SERIALIZED_NAME_CUSTOMER_ID = "customerId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ID)
  private String customerId;

  public static final String SERIALIZED_NAME_PRODUCT_ITEMS = "productItems";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ITEMS)
  private List<ProductItem> productItems = new ArrayList<ProductItem>();

  public static final String SERIALIZED_NAME_TOTAL_PRICE = "totalPrice";
  @SerializedName(SERIALIZED_NAME_TOTAL_PRICE)
  private Double totalPrice;

  /**
   * Gets or Sets currency
   */
  @JsonAdapter(CurrencyEnum.Adapter.class)
  public enum CurrencyEnum {
    EUR("EUR"),
    
    USD("USD");

    private String value;

    CurrencyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CurrencyEnum fromValue(String value) {
      for (CurrencyEnum b : CurrencyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CurrencyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CurrencyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CurrencyEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CurrencyEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private CurrencyEnum currency;

  public static final String SERIALIZED_NAME_PAYMENT_CARD_ID = "paymentCardId";
  @SerializedName(SERIALIZED_NAME_PAYMENT_CARD_ID)
  private String paymentCardId;

  public static final String SERIALIZED_NAME_SHIPPING_ADDRESS_ID = "shippingAddressId";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ADDRESS_ID)
  private String shippingAddressId;


  public OrderInfo customerId(String customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * Get customerId
   * @return customerId
  **/
  @ApiModelProperty(required = true, value = "")

  public String getCustomerId() {
    return customerId;
  }


  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public OrderInfo productItems(List<ProductItem> productItems) {
    
    this.productItems = productItems;
    return this;
  }

  public OrderInfo addProductItemsItem(ProductItem productItemsItem) {
    this.productItems.add(productItemsItem);
    return this;
  }

   /**
   * Get productItems
   * @return productItems
  **/
  @ApiModelProperty(required = true, value = "")

  public List<ProductItem> getProductItems() {
    return productItems;
  }


  public void setProductItems(List<ProductItem> productItems) {
    this.productItems = productItems;
  }


  public OrderInfo totalPrice(Double totalPrice) {
    
    this.totalPrice = totalPrice;
    return this;
  }

   /**
   * Get totalPrice
   * @return totalPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getTotalPrice() {
    return totalPrice;
  }


  public void setTotalPrice(Double totalPrice) {
    this.totalPrice = totalPrice;
  }


  public OrderInfo currency(CurrencyEnum currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(required = true, value = "")

  public CurrencyEnum getCurrency() {
    return currency;
  }


  public void setCurrency(CurrencyEnum currency) {
    this.currency = currency;
  }


  public OrderInfo paymentCardId(String paymentCardId) {
    
    this.paymentCardId = paymentCardId;
    return this;
  }

   /**
   * Get paymentCardId
   * @return paymentCardId
  **/
  @ApiModelProperty(required = true, value = "")

  public String getPaymentCardId() {
    return paymentCardId;
  }


  public void setPaymentCardId(String paymentCardId) {
    this.paymentCardId = paymentCardId;
  }


  public OrderInfo shippingAddressId(String shippingAddressId) {
    
    this.shippingAddressId = shippingAddressId;
    return this;
  }

   /**
   * Get shippingAddressId
   * @return shippingAddressId
  **/
  @ApiModelProperty(required = true, value = "")

  public String getShippingAddressId() {
    return shippingAddressId;
  }


  public void setShippingAddressId(String shippingAddressId) {
    this.shippingAddressId = shippingAddressId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderInfo orderInfo = (OrderInfo) o;
    return Objects.equals(this.customerId, orderInfo.customerId) &&
        Objects.equals(this.productItems, orderInfo.productItems) &&
        Objects.equals(this.totalPrice, orderInfo.totalPrice) &&
        Objects.equals(this.currency, orderInfo.currency) &&
        Objects.equals(this.paymentCardId, orderInfo.paymentCardId) &&
        Objects.equals(this.shippingAddressId, orderInfo.shippingAddressId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerId, productItems, totalPrice, currency, paymentCardId, shippingAddressId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderInfo {\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    productItems: ").append(toIndentedString(productItems)).append("\n");
    sb.append("    totalPrice: ").append(toIndentedString(totalPrice)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    paymentCardId: ").append(toIndentedString(paymentCardId)).append("\n");
    sb.append("    shippingAddressId: ").append(toIndentedString(shippingAddressId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

