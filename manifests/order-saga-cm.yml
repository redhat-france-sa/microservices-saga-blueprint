kind: ConfigMap
apiVersion: v1
metadata:
  name: order-saga-cm
  labels:
    app: order-saga
data:
  application.properties: >+
    quarkus.swagger-ui.always-include=true

    quarkus.kafka.devservices.enabled = false


    com.redhat.microsaga.rest.PaymentRemoteServices/mp-rest/url=http://localhost:8086

    com.redhat.microsaga.rest.PaymentRemoteServices/mp-rest/scope=javax.enterprise.context.ApplicationScoped

    com.redhat.microsaga.rest.StockRemoteServices/mp-rest/url=http://localhost:8086

    com.redhat.microsaga.rest.StockRemoteServices/mp-rest/scope=javax.enterprise.context.ApplicationScoped

    com.redhat.microsaga.rest.ShippingRemoteServices/mp-rest/url=http://localhost:8086

    com.redhat.microsaga.rest.ShippingRemoteServices/mp-rest/scope=javax.enterprise.context.ApplicationScoped


    mp.messaging.incoming.kogito_incoming_stream.connector=smallrye-kafka

    mp.messaging.incoming.kogito_incoming_stream.topic=order

    mp.messaging.incoming.kogito_incoming_stream.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer


    mp.messaging.outgoing.kogito_outgoing_stream.connector=smallrye-kafka

    mp.messaging.outgoing.kogito_outgoing_stream.topic=order

    mp.messaging.outgoing.kogito_outgoing_stream.value.serializer=org.apache.kafka.common.serialization.StringSerializer


    mp.messaging.incoming.stockfailed.connector=smallrye-kafka

    mp.messaging.incoming.stockfailed.topic=stockfailed

    mp.messaging.incoming.stockfailed.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer


    mp.messaging.incoming.stocksuccess.connector=smallrye-kafka

    mp.messaging.incoming.stocksuccess.topic=stocksuccess

    mp.messaging.incoming.stocksuccess.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer



    mp.messaging.incoming.orderpaymentfailed.connector=smallrye-kafka

    mp.messaging.incoming.orderpaymentfailed.topic=serviceresponse

    mp.messaging.incoming.orderpaymentfailed.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer


    mp.messaging.incoming.shippingfailed.connector=smallrye-kafka

    mp.messaging.incoming.shippingfailed.topic=serviceresponse

    mp.messaging.incoming.shippingfailed.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer


    mp.messaging.incoming.shippingsuccess.connector=smallrye-kafka

    mp.messaging.incoming.shippingsuccess.topic=serviceresponse

    mp.messaging.incoming.shippingsuccess.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer


    # mp.messaging.outgoing.kogito_outgoing_stream.connector=quarkus-http

    # mp.messaging.outgoing.kogito_outgoing_stream.url=${K_SINK}


    mp.messaging.outgoing.kogito-processinstances-events.connector=smallrye-kafka

    mp.messaging.outgoing.kogito-processinstances-events.topic=kogito-processinstances-events

    mp.messaging.outgoing.kogito-processinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer


    mp.messaging.outgoing.kogito-usertaskinstances-events.connector=smallrye-kafka

    mp.messaging.outgoing.kogito-usertaskinstances-events.topic=kogito-usertaskinstances-events

    mp.messaging.outgoing.kogito-usertaskinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer


    mp.messaging.outgoing.kogito-variables-events.connector=smallrye-kafka

    mp.messaging.outgoing.kogito-variables-events.topic=kogito-variables-events

    mp.messaging.outgoing.kogito-variables-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer


    # quarkus.reactive-messaging.kafka.serializer-autodetection.enabled=false


    quarkus.log.level=INFO

    quarkus.log.category."org.kie.kogito".level=DEBUG
